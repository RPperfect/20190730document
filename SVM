支持向量:
   支持平面把两类类别划分开来的超平面的向量点
   
感知机：g(z)=(1,z>=0|-1,z<0)

Logistic回归：
    结果标签:y=0/1
    
线性分类：
    超平面：f(x)=wTx+b(wTx=w0+w1x1+w2x2+w3x3+.....)  
    二维空间，f(x)是一条直线，将点分为两类，一侧y=1,另一侧y=-1,即f(x)<0时y=-1，f(x)>0时y=1
    1.f(x)=w.x+b(w.x表示w与x的内积) 两个参数w和b，w是法向量,b是截距
    2.如何确定w和b:寻找两条边界端或极端划分直线中间的最大间隔
    3.找f(x)转化为对w,b的最优化问题，最终化为对偶因子的求解
    总之：最大间隔-求对变量w和b的凸二次规划问题
拉格朗日函数：
对偶变量和对偶因子：

函数间隔：yf(x) 结果标签与分类函数的乘积，y=1或-1，结果只有-f(x）和f(x)，反过来说，两者乘积只为正数，f(x)可决定y的正负
几何间隔：yf(x)/||w||，真正的点到超平面的线性距离

最大间隔分类器(硬间隔)：
    间隔越大，分类正确的把握越大
    函数间隔不合适，因为在超平面固定的情况下，w和b可以等比例放大或缩小，即yf(x)可以取任意大
    几何间隔合适，不受w和b的影响
    公式： 
           max(支持向量点的几何间隔：2/||w||)
           
           arg max(w,b){min(n)(label.(w^Tx+b))/||w||}  min是指取支持向量点,max指街边距，最大街宽
           
           若label.(w^Tx+b)=1,则max(1/||w||),即min1/2*||w||^2,约束：yf(x)>=1
    
    约束条件：实际点的函数间隔/||w||>=支持向量点的几何间隔
    
    arg max(w,b){min(n)(label.(w^Tx+b))/||w||}根据拉格朗日乘子法:
      令L(w,b)=1/2*||w||^2-Ea^i(y^i(wTx^i+b)-1)
 
软间隔分类器：

非线性分类器：

核函数：
    本质就是向量积运算，低维转换到高维，但还是在低维运算
    多项式核函数
    高斯核函数
    mercer方法
    
SMO:
    本质是化为小问题，乘子ai很多，可以先求a1,a2解,固定其他ai值
    先取两个拉格朗日乘子a1,a2并求解,a1为外循环，a2为内循环，保证a1最严重违背KTT条件
